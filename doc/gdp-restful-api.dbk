<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article>
  <articleinfo>
    <title>RESTful Interface for the Global Data Plane</title>

    <author>
      <firstname>Eric</firstname>

      <surname>Allman</surname>

      <affiliation>
        <orgname>U.C. Berkeley Swarm Lab</orgname>
      </affiliation>
    </author>

    <pubdate>2014-06-09</pubdate>

    <releaseinfo>Draft 2</releaseinfo>
  </articleinfo>

  <para>This document describes the RESTful interface to the Global Data Plane
  (GDP). Note that this is not part of the GDP itself, since that layer treats
  all records as opaque. This level adds simple key-value structure to the
  data for the convenience of users.</para>

  <para>This document uses the name "USC" to represent an object in the GDP.
  This is a placeholder name.</para>

  <section>
    <title>Introduction</title>

    <para>This interface is a true RESTful interface, that is, it uses
    GET/POST/PUT/DELETE instead of overloading everything into GET. This
    implies that it won't work using only an off the shelf browser because
    browsers will only use POST methods in response to an HTML form.</para>

    <para>The data representation chosen is JSON, which is easier to build and
    parse than XML.</para>

    <para>All RESTful calls have the prefix "/gdp/v1" to allow overloading
    with other services and to allow multiple versions of the protocol to run
    simultaneously on one node.</para>
  </section>

  <section>
    <title>Security</title>

    <para>Everything stored in the GDP is supposed to be encrypted; however,
    this interface does not enforce this policy and treats all GDP data as an
    opaque blob. Data returned in response to a status request (e.g., for the
    number of records available) is always returned unencrypted as a JSON
    object.</para>

    <para>Although the data portion of the transaction may be encrypted, the
    request/response exchange is not, so it is highly recommended that clients
    communicate using https.</para>
  </section>

  <section>
    <title>Individual Operations</title>

    <refentry>
      <refnamediv>
        <refname>GET /gdp/v1/usc</refname>

        <refpurpose>list all known USCs</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Request Data</title>

        <para>none</para>
      </refsect1>

      <refsect1>
        <title>Response Data</title>

        <programlisting>Content-Type: application/json; type=gdp/usclist

[
    &lt;usc_id&gt;,
    . . .
]</programlisting>
      </refsect1>
    </refentry>

    <refentry>
      <refnamediv>
        <refname>GET /gdp/v1/usc/<replaceable>usc_id</replaceable></refname>

        <refpurpose>list information known about specified USC</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Request Data</title>

        <para>none</para>
      </refsect1>

      <refsect1>
        <title>Response Data</title>

        <programlisting>Content-Type: application/json; type=gdp/uscdesc

{
    "uscid": &lt;usc_id&gt;,
    "messages": &lt;integer&gt;,
    . . .
}</programlisting>

        <para>If the indicated USC does not exist, the GET returns with a 404
        error code.</para>
      </refsect1>
    </refentry>

    <refentry>
      <refnamediv>
        <refname>POST /gdp/v1/usc/<replaceable>usc_id</replaceable></refname>

        <refpurpose>add a record to specified USC</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Request Data</title>

        <para>(Opaque data to be appended)</para>
      </refsect1>

      <refsect1>
        <title>Response Data</title>

        <programlisting>Content-Type: application/json; type=gdp/response

{
    "msgno": &lt;integer&gt;,
    "timestamp": &lt;commit timestamp&gt;
    . . .
}</programlisting>

        <para>If the indicated USC does not exist, the GET returns with a 404
        error code.</para>
      </refsect1>
    </refentry>

    <refentry>
      <refnamediv>
        <refname>GET
        /gdp/v1/usc/<replaceable>usc_id</replaceable>/<replaceable>msgno</replaceable></refname>

        <refpurpose>return specific message number</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Request Data</title>

        <para>none</para>
      </refsect1>

      <refsect1>
        <title>Response Data</title>

        <programlisting>Content-Type: &lt;as specified during USC creation&gt;
GDP-Message-Number: &lt;msgno&gt;
GDP-Commit-Timestamp: &lt;timestamp&gt;

&lt;opaque data as written by POST&gt;</programlisting>

        <para>If the indicated USC or message number does not exist, the GET
        returns immediately with a 404 error code. Note that the metadata is
        included in the response header, not in the data itself, in order to
        maintain the opacity of that data. <remark>Should we move the metadata
        into the header for other commands as well to maintain
        symmetry?</remark></para>
      </refsect1>
    </refentry>

    <refentry>
      <refnamediv>
        <refname>GET
        /gdp/v1/usc/<replaceable>usc_id</replaceable>/watch?start=<replaceable>msgno</replaceable>&amp;timeout=<replaceable>seconds</replaceable></refname>

        <refpurpose>watch to a USC</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Request Data</title>

        <para>none</para>
      </refsect1>

      <refsect1>
        <title>Response Data</title>

        <para>If the indicated USC does not exist, the GET returns immediately
        with a 404 error code. Otherwise, if the indicated message number
        exists, the result is exactly the same as the "GET
        /gdp/v1/usc/&lt;usc_id&gt;/&lt;msgno&gt;" case. If the indicated
        message number does not exist, this call waits for up to the indicated
        timeout for that message to appear; if it does, the message is
        returned in the usual way, otherwise it returns with a 408 Request
        Timeout response. If the starting message number is not specified, it
        starts from the beginning.</para>

        <para>Note that a successful GET response includes the message number
        in the (non-standard) GDP-Message-Number header field. A client
        wishing to simulate a "subscribe" operation would add one to the value
        in that field and immediately re-issue a "watch" request with that
        value as the starting message number.</para>

        <remark>Question: could we use the previous GET and just append
        "/watch" &mdash; or even assume this behavior if a timeout is
        specified, e.g., "GET
        /gdp/v1/usc/<replaceable>usc_id</replaceable>/<replaceable>msgno</replaceable>?timeout=60"?</remark>
      </refsect1>
    </refentry>
  </section>
</article>
