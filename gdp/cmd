gdp_event.c:341:	switch (req->rpdu->cmd)
gdp_event.c:373:		if (req->rpdu->cmd >= GDP_ACK_MIN && req->rpdu->cmd <= GDP_ACK_MAX)
gdp_event.c:377:			req->stat = _gdp_stat_from_acknak(req->rpdu->cmd);
gdp_event.c:380:		if (req->rpdu->cmd >= GDP_NAK_C_MIN && req->rpdu->cmd <= GDP_NAK_R_MAX)
gdp_event.c:384:			req->stat = _gdp_stat_from_acknak(req->rpdu->cmd);
gdp_event.c:389:				req->rpdu->cmd);
gdp_event.c:403:	gev->datum = gdp_datum_dup(req->rpdu->datum);
gdp_gcl_ops.c:175:	gcl->nrecs = req->rpdu->datum->recno;
gdp_gcl_ops.c:178:	gcl->gclmd = _gdp_gclmd_deserialize(req->rpdu->datum->dbuf);
gdp_gcl_ops.c:452:	gdp_datum_copy(datum, req->rpdu->datum);
gdp_gcl_ops.c:567:	gdp_datum_copy(datum, req->rpdu->datum);
gdp_gcl_ops.c:652:	*gmdp = _gdp_gclmd_deserialize(req->rpdu->datum->dbuf);
gdp_main.c:165:		memcpy(req->rpdu->src, req->cpdu->dst, sizeof req->rpdu->src);
gdp_main.c:166:		memcpy(req->rpdu->dst, req->cpdu->src, sizeof req->rpdu->dst);
gdp_main.c:167:		req->rpdu->rid = req->cpdu->rid;
gdp_main.c:179:	resp = acknak_from_estat(estat, req->rpdu->cmd);
gdp_main.c:188:	if (req->rpdu->datum != NULL)
gdp_main.c:190:		gdp_datum_t *datum = req->rpdu->datum;
gdp_main.c:193:		ep_thr_mutex_lock(&req->rpdu->datum->mutex);
gdp_main.c:210:				gdp_buf_getlength(req->rpdu->datum->dbuf));
gdp_main.c:211:		req->rpdu->cmd = resp;
gdp_main.c:225:	if (req->rpdu->datum != NULL)
gdp_main.c:226:		ep_thr_mutex_unlock(&req->rpdu->datum->mutex);
gdp_main.c:275:				req->rpdu->rid == rpdu->rid &&
gdp_main.c:276:				GDP_NAME_SAME(req->rpdu->src, rpdu->dst) &&
gdp_main.c:277:				GDP_NAME_SAME(req->rpdu->dst, rpdu->src))
gdp_main.c:315:	int cmd = rpdu->cmd;
gdp_main.c:322:	gcl = _gdp_gcl_cache_get(rpdu->src, 0);
gdp_main.c:333:						rpdu->cmd == GDP_NAK_R_NOROUTE ? 19 : 1))
gdp_main.c:338:							rpdu->cmd, _gdp_proto_cmd_name(rpdu->cmd));
gdp_main.c:342:					ep_dbg_printf("    %s\n", gdp_printable_name(rpdu->src, pname));
gdp_main.c:366:				gcl, rpdu->rid);
gdp_main.c:367:		req = _gdp_req_find(gcl, rpdu->rid);
gdp_main.c:403:							rpdu->cmd);
gdp_main.c:416:				rpdu->cmd);
gdp_main.c:417:		ocmd = rpdu->cmd;
gdp_main.c:455:	resp = acknak_from_estat(estat, req->rpdu->cmd);
gdp_main.c:503:	else if (req->rpdu->cmd == GDP_NAK_R_NOROUTE)
gdp_proto.c:259:			req->rpdu == NULL ? "???" : _gdp_proto_cmd_name(req->rpdu->cmd),
gdp_proto.c:295:			gdp_buf_move(user_dbuf, req->rpdu->datum->dbuf,
gdp_proto.c:296:					gdp_buf_getlength(req->rpdu->datum->dbuf));
gdp_proto.c:299:			gdp_buf_free(req->rpdu->datum->dbuf);
gdp_proto.c:300:			req->rpdu->datum->dbuf = user_dbuf;
gdp_proto.c:307:				if (req->rpdu->datum->sig != NULL)
gdp_proto.c:309:					gdp_buf_move(user_sig, req->rpdu->datum->sig,
gdp_proto.c:310:							gdp_buf_getlength(req->rpdu->datum->sig));
gdp_proto.c:313:			if (req->rpdu->datum->sig != NULL)
gdp_proto.c:314:				gdp_buf_free(req->rpdu->datum->sig);
gdp_proto.c:315:			req->rpdu->datum->sig = user_sig;
gdp_proto.c:316:			req->rpdu->datum->siglen = user_sig == NULL
gdp_proto.c:322:			memcpy(req->cpdu->datum, req->rpdu->datum, sizeof *req->cpdu->datum);
gdp_proto.c:325:			req->rpdu->datum->dbuf = NULL;		// but not the user dbuf!
gdp_proto.c:326:			req->rpdu->datum->sig = NULL;		// or the signature!
gdp_proto.c:327:			gdp_datum_free(req->rpdu->datum);
gdp_proto.c:330:			req->rpdu->datum = req->cpdu->datum;
gdp_proto.c:332:			EP_ASSERT(req->rpdu->datum->inuse);
gdp_proto.c:351:	if (req->rpdu->datum == NULL)
gdp_proto.c:358:		estat = GDP_STAT_FROM_ACK(req->rpdu->cmd);
gdp_proto.c:381:		memcpy(gcl->name, req->rpdu->src, sizeof gcl->name);
gdp_proto.c:399:	if (req->gcl != NULL && req->rpdu->datum != NULL)
gdp_proto.c:400:		req->gcl->nrecs = req->rpdu->datum->recno;
gdp_proto.c:413:	EP_ASSERT_ELSE(req->rpdu->datum != NULL, return EP_STAT_ASSERT_ABORT);
gdp_proto.c:419:	if (req->gcl->nrecs < req->rpdu->datum->recno)
gdp_proto.c:420:		req->gcl->nrecs = req->rpdu->datum->recno;
gdp_proto.c:428:		estat = req->gcl->readfilter(req->rpdu->datum, req->gcl->readfpriv);
gdp_proto.c:452:	return GDP_STAT_FROM_C_NAK(req->rpdu->cmd);
gdp_proto.c:460:	return GDP_STAT_FROM_S_NAK(req->rpdu->cmd);
gdp_proto.c:468:	return GDP_STAT_FROM_R_NAK(req->rpdu->cmd);
gdp_proto.c:479:	if (req->gcl != NULL && req->rpdu->datum != NULL)
gdp_proto.c:480:		req->gcl->nrecs = req->rpdu->datum->recno;
gdp_subscr.c:101:	if (req->rpdu->datum != NULL)
gdp_subscr.c:102:		gdp_datum_free(req->rpdu->datum);
gdp_subscr.c:103:	req->rpdu->datum = NULL;
